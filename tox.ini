[tox]
isolated_build = true
envlist =
    py{37,38,39}-django{22,30,31}-{mysql,oracle,postgres,sqlite},
    flake8,isort,dist

[tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39

[gh-actions:env]
DB_BACKEND =
    mysql: mysql
    oracle: oracle
    postgresql: postgres
    sqlite3: sqlite

[testenv]
whitelist_externals = poetry
deps =
    django22: Django~=2.2.0
    django22: django_jsonfield_backport
    django30: Django~=3.0.0
    django30: django_jsonfield_backport
    django31: Django~=3.1.0
    mysql: mysqlclient
    oracle: cx_Oracle
    postgres: psycopg2
commands =
    poetry install -v
    poetry run python ./manage.py test --noinput
    ; coverage run pytest tests/ {posargs}
    ; coverage combine
    ; coveralls --rcfile=setup.cfg
envdir={toxworkdir}/v/{envname}
passenv =
    COVERALLS_REPO_TOKEN
    DJANGO_SETTINGS_MODULE
    PYTHONPATH
    DB_BACKEND
    DB_NAME
    DB_USER
    DB_PASSWORD
    DB_HOST
    DB_PORT
    GITHUB_*
usedevelop = True

[testenv:black]
commands =
    black -l 99 -t py36 --check --diff {posargs}
deps =
    black

[testenv:black-fix]
commands =
    black -l 99 -t py36 .
deps =
    black

[testenv:flake8]
commands =
    flake8 {posargs}
deps =
    flake8

[testenv:isort]
commands =
    isort --check-only --diff src tests
deps =
    isort

[testenv:dist]
commands =
    twine check .tox/dist/*
deps =
    twine
usedevelop = False

[pytest]
DJANGO_SETTINGS_MODULE = django_spicy_id.tests.settings
